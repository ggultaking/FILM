{"ast":null,"code":"var _jsxFileName = \"/Users/gultakingahramanova/Desktop/FILM_GUL/FILM/src/components/Favorites/Favorites.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createFavoriteList, deleteFilmAction } from \"../../redux/addFavorite/favoriteAction\";\nimport \"./Favorites.css\";\n\nconst Favorites = () => {\n  const dispatch = useDispatch();\n  const listName = useSelector(store => store.favoriteReducer.favoriteListName);\n  const favoriteFilms = useSelector(store => store.favoriteReducer.FavoriteFilms);\n  const [saveBtn, setsaveBtn] = useState(\"Сохранить список\");\n  const [isClicked, setisClicked] = useState(false);\n\n  const deleteFavorite = imdbID => {\n    dispatch(deleteFilmAction({\n      imdbID\n    }));\n  };\n\n  const updateListName = e => {\n    const newListName = e.target.value;\n    dispatch(createFavoriteList(newListName));\n  };\n\n  const createFavorite = () => {\n    setsaveBtn(\"loading...\");\n    setTimeout(() => {\n      setisClicked(true);\n    }, 300);\n  };\n\n  const enabled = listName && favoriteFilms.length > 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: listName,\n    className: \"favorites__name\",\n    placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\",\n    onChange: updateListName,\n    disabled: isClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), favoriteFilms.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, favoriteFilms === null || favoriteFilms === void 0 ? void 0 : favoriteFilms.map(item => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"favorite__film\",\n      key: item.imdbID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"favorite__film-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, item.Title, \" (\", item.Year, \")\", \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"favorites__button\",\n      onClick: () => deleteFavorite(item.imdbID),\n      disabled: isClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"X\"));\n  })), !isClicked ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"favorites__save\",\n    onClick: createFavorite,\n    disabled: !enabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, saveBtn) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/listpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u0441\\u043F\\u0438\\u0441\\u043A\\u0443\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435\"));\n};\n\nexport default Favorites;","map":{"version":3,"sources":["/Users/gultakingahramanova/Desktop/FILM_GUL/FILM/src/components/Favorites/Favorites.js"],"names":["React","useState","useDispatch","useSelector","Link","createFavoriteList","deleteFilmAction","Favorites","dispatch","listName","store","favoriteReducer","favoriteListName","favoriteFilms","FavoriteFilms","saveBtn","setsaveBtn","isClicked","setisClicked","deleteFavorite","imdbID","updateListName","e","newListName","target","value","createFavorite","setTimeout","enabled","length","map","item","Title","Year"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  createFavoriteList,\n  deleteFilmAction,\n} from \"../../redux/addFavorite/favoriteAction\";\nimport \"./Favorites.css\";\n\nconst Favorites = () => {\n  const dispatch = useDispatch();\n\n  const listName = useSelector(\n    (store) => store.favoriteReducer.favoriteListName\n  );\n  const favoriteFilms = useSelector(\n    (store) => store.favoriteReducer.FavoriteFilms \n  );\n  const [saveBtn, setsaveBtn] = useState(\"Сохранить список\");\n  const [isClicked, setisClicked] = useState(false);\n  const deleteFavorite = (imdbID) => {\n    dispatch(deleteFilmAction({ imdbID}));\n  };\n  const updateListName = (e) => {\n    const newListName = e.target.value;\n    dispatch(createFavoriteList(newListName));\n  };\n  const createFavorite = () => {\n    setsaveBtn(\"loading...\");\n    setTimeout(() => {\n      setisClicked(true);\n    }, 300);\n  };\n  const enabled = listName && favoriteFilms.length > 0;\n\n  return (\n    <div className=\"favorites\">\n      <input\n        value={listName}\n        className=\"favorites__name\"\n        placeholder=\"Новый список\"\n        onChange={updateListName}\n        disabled={isClicked}\n      />\n    \n      {favoriteFilms.length > 0 && (\n        <ul>\n          {favoriteFilms?.map((item) => {\n            return (\n          \n              <li className=\"favorite__film\" key={item.imdbID}>\n                <p className=\"favorite__film-text\" >\n                {item.Title} ({item.Year}){\" \"}\n                </p>\n              \n                <button\n                  className=\"favorites__button\"\n                  onClick={()=>deleteFavorite(item.imdbID)}\n                  disabled={isClicked}\n                >\n                  X\n                </button>\n              </li>\n          \n            );\n          })}\n        </ul>\n      )}\n\n \n      \n      {!isClicked ? (\n        <button\n          type=\"button\"\n          className=\"favorites__save\"\n          onClick={createFavorite}\n          disabled={!enabled}\n        >\n          {saveBtn}\n        </button>\n      ) : (\n        <Link to=\"/listpage\">Перейти к списку</Link>\n      )}\n      <button>\nудалить все</button>\n    </div>\n  );\n};\n\nexport default Favorites;\n"]},"metadata":{},"sourceType":"module"}